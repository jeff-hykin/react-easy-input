// Generated by CoffeeScript 2.3.1
var Invalid, isInvalid;

Invalid = class Invalid {
  constructor(value, errorMsg) {
    var valueCopy;
    this.valueOf = this.valueOf.bind(this);
    this.toString = this.toString.bind(this);
    valueCopy = value;
    // unwrap any invalid values
    while (valueCopy instanceof Invalid) {
      valueCopy = valueCopy.value;
    }
    this[Symbol.toPrimitive] = function(hint) {
      return this.value;
    };
    this.value = valueCopy;
    this.errorMsg = errorMsg;
  }

  valueOf() {
    return this.value;
  }

  toString() {
    return this.value;
  }

};

isInvalid = function(value) {
  if (typeof value === "object" && value instanceof Invalid) {
    return true;
  } else {
    return false;
  }
};

module.exports.Invalid = Invalid;

module.exports.isInvalid = isInvalid;
