// Generated by CoffeeScript 2.3.1
// A class for indicating a value is invalid
// it is used for input validation
var Invalid, isInvalid;

Invalid = class Invalid {
  constructor(value, errorMsg) {
    var valueCopy;
    this.valueOf = this.valueOf.bind(this);
    this.toString = this.toString.bind(this);
    valueCopy = value;
    // unwrap any invalid values
    while (valueCopy instanceof Invalid) {
      valueCopy = valueCopy.value;
    }
    this.value = valueCopy;
    this.errorMsg = errorMsg;
  }

  valueOf() {
    return this.value;
  }

  toString() {
    return this.value;
  }

};

isInvalid = function(value) {
  if (typeof value === "object" && value instanceof Invalid) {
    return true;
  } else {
    return false;
  }
};

module.exports.Invalid = Invalid;

module.exports.isInvalid = isInvalid;

module.exports.converters = {
  bool: {
    outputer: (shouldBeBool) => {
      if (shouldBeBool === true) {
        return "True";
      } else if (shouldBeBool === false) {
        return "False";
      }
      // If provided value is not boolean, then return the value itself
      return shouldBeBool;
    },
    inputer: (userInput) => {
      var userInputLowerCased;
      userInputLowerCased = userInput.toLowerCase();
      if (userInputLowerCased === "true") {
        return true;
      } else if (userInputLowerCased === "false") {
        return false;
      }
      // if not true or false, then its invalid
      return new Invalid(userInput);
    }
  },
  digits: {
    inputer: (userInput) => {
      if (userInput.match(/\d+/)) {
        // convert string to number
        return userInput - 0;
      } else {
        // if its not a number
        return new Invalid(userInput, "Please only input numerical digits (0-9)");
      }
    }
  },
  "datetime-local": {
    outputer: (shouldBeDateTime) => {
      if (shouldBeDateTime && shouldBeDateTime instanceof Date) {
        return shouldBeDateTime.toISOString().substring(0, 16);
      } else {
        return shouldBeDateTime;
      }
    },
    inputer: (userInput) => {
      return new Date(userInput + 'Z');
    }
  },
  email: {
    inputer: (userInput) => {
      console.log('userInput is ', userInput);
      if (userInput.match(/.+@.+\..+/)) {
        console.log('userInput is a valid email');
        return userInput;
      } else {
        console.log('userInput is not an email');
        return new Invalid(userInput);
      }
    }
  }
};
